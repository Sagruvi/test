// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// Controller is an autogenerated mock type for the Controller type
type Controller struct {
	mock.Mock
}

// CreateEvent provides a mock function with given fields: w, r
func (_m *Controller) CreateEvent(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetEvent provides a mock function with given fields: w, r
func (_m *Controller) GetEvent(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// Search provides a mock function with given fields: w, r
func (_m *Controller) Search(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// Test provides a mock function with given fields: w, r
func (_m *Controller) Test(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// NewController creates a new instance of Controller. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewController(t interface {
	mock.TestingT
	Cleanup(func())
}) *Controller {
	mock := &Controller{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
